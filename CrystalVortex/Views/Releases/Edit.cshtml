@model CrystalVortex.Models.Release
@using CrystalVortex.Helpers;
@{
    ViewBag.Title = "Edit";
}


@section scripts {
    <script type="text/javascript">

        Dropzone.options.dropzoneForm_AlbumArt = {
            init: function () {
                this.on("complete", function (data) {
                    var res = eval('(' + data.xhr.responseText + ')');
                    alert(res.Message);
                    $("#dropzoneForm_AlbumArt").css("background-image", "url(" + res.Message + ")");
                });
            }
        };
    </script>
}

<style>
    #dropzoneForm_AlbumArt {
        background: url(@Html.DisplayReleaseImagePath(Model.ReleaseCode)) no-repeat center center;
        background-size: cover;
    text-shadow:0px 0px 1px #fff;
    }
</style>

<h2>Edit</h2>


<div class="row">
    <div class="col-md-6">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Release</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)



                <div class="form-group">
                    @Html.LabelFor(model => model.ReleaseCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ReleaseCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReleaseCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AlbumArt, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AlbumArt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AlbumArt, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TorrentURL, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TorrentURL, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TorrentURL, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TorrentMD5, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TorrentMD5, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TorrentMD5, "", new { @class = "text-danger" })
                    </div>
                </div>
                <input type="checkbox" checked data-toggle="toggle">
                <div class="form-group">
                    <label class="control-label col-md-2"></label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.LabelFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="col-md-4">
        <h3>Album Art</h3>
        <div style="max-width:200px">
            <form action="~/Releases/SaveUploadedFile" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm_AlbumArt">
                @Html.HiddenFor(model => model.ReleaseCode)
                <div class="fallback">
                    <input name="file" type="file" multiple />
                    <input type="submit" value="Upload" />
                </div>
            </form>

        </div>

        <hr />

        <h3>Tracks</h3>
        <form action="~/Releases/SaveTrackFile" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm_Tracks">
            @Html.HiddenFor(model => model.ReleaseCode)
            <div class="fallback">
                <input name="file" type="file" multiple />
                <input type="submit" value="Upload" />
            </div>
        </form>
    </div>
</div>




        

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
